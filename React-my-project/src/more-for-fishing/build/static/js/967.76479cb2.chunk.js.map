{"version":3,"file":"static/js/967.76479cb2.chunk.js","mappings":"8OAGMA,EAAUC,EAAAA,EAAAA,WAEHC,EAAW,yCAAG,mGACZC,EAAAA,GAAYH,GADA,mFAAH,qDAIXI,EAAW,yCAAG,WAAOC,GAAP,sFACZF,EAAAA,GAAA,UAAeH,EAAf,YAA0BK,EAA1B,cAAiD,IADrC,mFAAH,sDAIXC,EAAW,yCAAG,WAAOD,GAAP,sFACXF,EAAAA,GAAA,UAAgBH,EAAhB,YAA2BK,EAA3B,aAAiD,IADtC,mFAAH,sD,sCCqIxB,EAzIc,WACZ,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAuBN,EAAAA,EAAAA,UAAS,GAAzBO,GAAP,eAEMC,EAAkBH,EAAcE,EAChCE,EAAmBD,EAAkBD,EACrCG,EAAeT,EAAMU,MAAMF,EAAkBD,IAInDI,EAAAA,EAAAA,YAAU,WACRC,IAEGC,MAAK,SAACC,GACLb,EAASa,MAEVD,MAAK,SAACC,GACLX,GAAW,MAEZY,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAYD,QAEf,IAkCH,OACE,iBAAKE,UAAU,4BAAf,WACE,2DACA,eAAIA,UAAU,aAAd,SACGhB,GACC,SAACiB,EAAA,EAAD,IAEAV,EAAaW,KAAI,SAACC,GAChB,OACE,gBAAIH,UAAU,kBAAd,WACE,wBAAKG,EAAKC,gBACeC,IAAxBF,EAAKG,KAAL,QACC,yBACG,KACD,cAAGN,UAAU,eAFf,eAKE,UACoBK,IAAvBF,EAAKG,KAAL,OAC6B,IAA9BH,EAAKG,KAAL,MAAmBC,QACjB,yBACG,KACD,cAAGP,UAAU,uBAFf,WAKE,MACJ,iBAAKQ,GAAG,UAAR,eAC2BH,IAAxBF,EAAKG,KAAL,QACC,iCACE,SAAC,KAAD,CACEG,GAAE,wBAAmBN,EAAKO,KAC1BV,UAAU,eAFZ,6BADF,QAQE,SAAC,KAAD,CACEA,UAAU,kBACVS,GAAE,6BAAwBN,EAAKO,KAFjC,4BARF,YAe0BL,IAAvBF,EAAKG,KAAL,OACC,mBACEK,KAAK,SACLX,UAAU,iBACVY,QAAS,kBA/ELC,EA+E8BV,EAAKO,SA9E7DhB,EACemB,GACZlB,MAAK,WACJI,EAAAA,GAAAA,QAAc,mCAEfJ,MAAK,WACJD,IAA2BC,MAAK,SAACC,GAC/Bb,EAASa,SAGZC,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAYD,MAZS,IAACe,GA4EN,6BAOE,QAEJ,UACqBR,IAAxBF,EAAKG,KAAL,QACC,mBACEK,KAAK,SACLX,UAAU,kBACVY,QAAS,kBA1EDC,EA0E0BV,EAAKO,SAzEzDhB,EACemB,GACZlB,MAAK,WACJI,EAAAA,GAAAA,QAAc,kCAEfJ,MAAK,WACJD,IAA2BC,MAAK,SAACC,GAC/Bb,EAASa,SAGZC,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAYD,MAZS,IAACe,GAuEV,0BAOE,SAEN,oBAvDmCV,EAAKO,WA6DlD,SAACI,EAAA,EAAD,CACEC,aAAc3B,EACd4B,WAAYlC,EAAMyB,OAClBU,SAzHW,SAACC,GAAD,OAAgB/B,EAAe+B","sources":["services/adminService.js","components/admin/Admin.js"],"sourcesContent":["import { environment } from '../environments/environment';\r\nimport * as request from './requster';\r\n\r\nconst baseUrl = environment.apiUserUrl;\r\n\r\nexport const getAllUsers = async () => {\r\n  return await request.get(baseUrl);\r\n}\r\n\r\nexport const suspendUser = async (profileId) => {\r\n  return await request.del(`${baseUrl}/${profileId}?soft=true`, {});\r\n};\r\n\r\nexport const restoreUser = async (profileId) => {\r\n   return await request.post(`${baseUrl}/${profileId}/_restore`, {});\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport * as adminService from '../../services/adminService';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './Admin.css';\r\nimport { Loading } from '../shared/Loading';\r\nimport { Pagination } from '../shared/pagination/Pagination';\r\n\r\nconst Admin = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage] = useState(3);\r\n\r\n  const indexOfLastPost = currentPage * usersPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    adminService\r\n      .getAllUsers()\r\n      .then((data) => {\r\n        setUsers(data);\r\n      })\r\n      .then((data) => {\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const suspendUserHandler = (userId) => {\r\n    adminService\r\n      .suspendUser(userId)\r\n      .then(() => {\r\n        toast.success('Successfully suspended user!');\r\n      })\r\n      .then(() => {\r\n        adminService.getAllUsers().then((data) => {\r\n          setUsers(data);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err);\r\n      });\r\n  };\r\n\r\n  const restoreUserHandler = (userId) => {\r\n    adminService\r\n      .restoreUser(userId)\r\n      .then(() => {\r\n        toast.success('Successfully restored user!');\r\n      })\r\n      .then(() => {\r\n        adminService.getAllUsers().then((data) => {\r\n          setUsers(data);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container admin-container\">\r\n      <h3>Admin panel - User management</h3>\r\n      <ul className=\"list-group\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          currentUsers.map((user) => {\r\n            return (\r\n              <li className=\"list-group-item\" key={user._id}>\r\n                <h5>{user.username}</h5>\r\n                {user._kmd['status'] !== undefined ? (\r\n                  <p>\r\n                    {' '}\r\n                    <i className=\"fas fa-ban\" />\r\n                    Suspended\r\n                  </p>\r\n                ) : null}\r\n                {user._kmd['roles'] !== undefined &&\r\n                user._kmd['roles'].length !== 0 ? (\r\n                  <p>\r\n                    {' '}\r\n                    <i className=\"fas fa-user-shield\" />\r\n                    Admin\r\n                  </p>\r\n                ) : null}\r\n                <div id=\"buttons\">\r\n                  {user._kmd['status'] === undefined ? (\r\n                    <>\r\n                      <Link\r\n                        to={`/user/profile/${user._id}`}\r\n                        className=\"btn btn-info\"\r\n                      >\r\n                        Profile details\r\n                      </Link>\r\n                      &nbsp;\r\n                      <Link\r\n                        className=\"btn btn-success\"\r\n                        to={`/user/profile/edit/${user._id}`}\r\n                      >\r\n                        Update profile\r\n                      </Link>\r\n                      &nbsp;\r\n                      {user._kmd['roles'] === undefined ? (\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => suspendUserHandler(user._id)}\r\n                        >\r\n                          Suspend profile\r\n                        </button>\r\n                      ) : null}\r\n                    </>\r\n                  ) : null}\r\n                  {user._kmd['status'] !== undefined ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => restoreUserHandler(user._id)}\r\n                    >\r\n                      Restore user\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n                <hr />\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n      <Pagination\r\n        itemsPerPage={usersPerPage}\r\n        totalItems={users.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["baseUrl","environment","getAllUsers","request","suspendUser","profileId","restoreUser","useState","users","setUsers","isLoading","setLoading","currentPage","setCurrentPage","usersPerPage","indexOfLastPost","indexOfFirstPost","currentUsers","slice","useEffect","adminService","then","data","catch","err","toast","className","Loading","map","user","username","undefined","_kmd","length","id","to","_id","type","onClick","userId","Pagination","itemsPerPage","totalItems","paginate","pageNumber"],"sourceRoot":""}